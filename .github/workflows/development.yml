name: Development

on:
  push:
    branches:
      - dev
      - develop
      - feature/ci-cd
      - feature/env-file-support
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: NPM audit
        run: yarn npm audit --recursive --all --severity high

      - name: CodeQL autobuild
        uses: github/codeql-action/autobuild@v1

      - name: CodeQL analysis
        uses: github/codeql-action/analyze@v1

  build-and-publish:
    runs-on: ubuntu-latest
    name: Build & Publish
    needs: analyze
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"
          cache: yarn

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create .env file
        run: echo '${{ secrets.UNIQUE_NETWORK_ENV_FILE}}' > ./packages/apps/.env

      - name: Install NPM packages
        run: yarn install

      - name: Build a project
        run: yarn build:www

      - name: Build and push the Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  test:
    runs-on: ubuntu-latest
    name: Test
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"
          cache: yarn

      - name: Karma tests
        run: echo 'yarn test:karma'

      - name: Jest tests
        run: echo 'yarn test:jest'

  deploy:
    runs-on: ['self-hosted', 'deploy', 'development']
    name: Deploy
    needs: test
    environment: development
    if: ${{ contains(github.ref, 'refs/heads/dev') || contains(github.ref, 'refs/heads/develop') || contains(github.ref, 'refs/heads/feature/ci-cd') }}
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
      DOCKER_NAME: ${{ secrets.DOCKER_NAME }}
      DOCKER_PORT: ${{ secrets.DOCKER_PORT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Run Docker Compose
        run: docker pull ${DOCKER_IMAGE} && docker-compose --compatibility up -d --no-build --force-recreate

      - name: Check status
        run: docker ps --all --latest --size
