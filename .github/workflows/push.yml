name: CI/CD for push-events

on:
  push:
    branches:
      - dev
      - master
      - feature/env-file-support
      - feature/ci-cd

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    name: Build and Publish
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          cache: yarn

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create .env file
        run: >-
          if [ '${{ github.ref }}' == 'master' ]; then
            echo 111 && echo '${{ secrets.UNIQUE_NETWORK_PRODUCTION_VARS}}' > ./packages/apps/.env
          elif [ '${{ github.ref }}' == 'dev' ]; then
            echo 222 && echo '${{ secrets.UNIQUE_NETWORK_DEVELOPMENT_VARS }}' > ./packages/apps/.env
          else
            echo 333 && echo '${{ secrets.UNIQUE_NETWORK_DEVELOPMENT_VARS }}' > ./packages/apps/.env
          fi

      - name: Install NPM packages
        run: yarn install --immutable

      - name: Build a project
        run: yarn build:www

      - name: Build and push the Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  testing:
    runs-on: ubuntu-latest
    name: Testing
    needs: build-and-publish
    steps:

      - name: Checkout code
        uses: actions/checkout@v1

      - name: NPM packages audit
        run: echo 'yarn npm audit --recursive --all'

      - name: Karma tests
        run: echo 'yarn test:karma'

      - name: Jest tests
        run: echo 'yarn test:jest'

  deploy-development:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/feature/env-file-support' }}
    environment: development
    name: Deploy (Development)
    needs: testing
    steps:

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Run Docker Compose
        run: echo 'docker-compose --compatibility up -d --no-build --force-recreate'

  deploy-production:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    environment: production
    name: Deploy (Production)
    needs: testing
    steps:

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Deploy via Docker Compose
        run: echo 'docker-compose --compatibility up -d --no-build --force-recreate'
